{"version":3,"file":"static/js/344.bc5e96f7.chunk.js","mappings":"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","sources":["components/Container/Container.jsx","components/ValidationPopup/ValidationPopup.module.css","components/ValidationPopup/ValidationPopup.js","webpack://slimmom/./src/components/RegistrationForm/RegistrationForm.module.css?5637","components/RegistrationForm/RegistrationForm.jsx","pages/Register/Register.jsx","redux/validation/registrationSelectors.js","../node_modules/@mui/icons-material/CheckCircleOutline.js","../node_modules/@mui/icons-material/ErrorOutline.js"],"sourcesContent":["import { node, string } from 'prop-types';\n\nconst Container = ({children, className}) => {\n    return (\n        <div className={className}>{children}</div>\n    )\n};\n\nContainer.propTopes = {\n    children: node.isRequired,\n    className: string\n};\n\nexport default Container ;","// extracted by mini-css-extract-plugin\nexport default {};","import React from 'react';\nimport { Paper, List, ListItem, ListItemText } from '@mui/material';\nimport CheckCircleOutlineIcon from '@mui/icons-material/CheckCircleOutline';\nimport ErrorOutlineIcon from '@mui/icons-material/ErrorOutline';\nimport css from './ValidationPopup.module.css';\n\nconst ValidationPopup = ({ validationData, visible }) => {\n  return (\n    <Paper elevation={8} className={css.validationPopup}>\n      <List className={css.validationPopupList} sx={{ width: '100%', maxWidth: 360 }}>\n        {visible && validationData\n          ? validationData.map((item, index) => {\n              const reqKey = Object.keys(item)[0];\n              const { id, message, met } = item[reqKey];\n              const IconComponent = met ? CheckCircleOutlineIcon : ErrorOutlineIcon;\n              const iconColor = met ? 'green' : 'red';\n              return (\n                <ListItem className={css.validationPopupItem} key={id} disableGutters>\n                  <IconComponent className={css.validationPopupIcon} style={{ color: iconColor }} />\n                  <ListItemText disableTypography primary={message} sx={{ fontSize: '12px' }} />\n                </ListItem>\n              );\n            })\n          : null}\n      </List>\n    </Paper>\n  );\n};\n\nexport default ValidationPopup;","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"RegistrationForm_form__c8X43\",\"password_input\":\"RegistrationForm_password_input__YljM2\",\"email_input\":\"RegistrationForm_email_input__0+Pum\",\"name_input\":\"RegistrationForm_name_input__n3sjp\",\"form_container\":\"RegistrationForm_form_container__sZfTu\",\"form_title\":\"RegistrationForm_form_title__W3JXl\",\"form_grid\":\"RegistrationForm_form_grid__jv6mY\",\"button_container\":\"RegistrationForm_button_container__0kjAW\"};","import React, { useState, useRef } from 'react';\nimport { Box, FormControl, TextField, Grid } from '@mui/material';\nimport style from './RegistrationForm.module.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  validateEmail,\n  validateName,\n  validatePassword,\n} from '../../redux/validation/registrationSlice';\nimport ValidationPopup from '../ValidationPopup/ValidationPopup';\nimport {\n  selectFormIsValid,\n  selectIsEmailValid,\n  selectIsPasswordValid,\n  selectIsNameValid,\n} from '../../redux/validation/registrationSelectors';\nimport { register } from 'redux/auth/authOperations';\nimport { useNavigate } from 'react-router-dom';\nimport CustomButton from 'components/CustomButton/CustomButton';\nimport { postCalculator } from 'redux/user/userOperations';\nimport { useUser } from 'hooks/useUser';\n\nconst RegistrationForm = () => {\n  const emailRef = useRef(null);\n  const passwordRef = useRef(null);\n  const isEmailValid = useSelector(selectIsEmailValid);\n  const isPasswordValid = useSelector(selectIsPasswordValid);\n  const isNameValid = useSelector(selectIsNameValid);\n  const isFormValid = useSelector(selectFormIsValid);\n  const { calculator } = useUser();\n  const validationReqs = useSelector(\n    state => state.registration.validationReqs\n  );\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const [validationPopups, setValidationPopups] = useState({\n    name: false,\n    email: false,\n    password: false,\n  });\n  const [focusedField, setFocusedField] = useState(null);\n  const toggleValidationPopup = (fieldName, visible) => {\n    setValidationPopups({ ...validationPopups, [fieldName]: visible });\n  };\n  const [formData, setFormData] = useState({\n    name: '',\n    email: '',\n    password: '',\n  });\n  const resetForm = () => {\n    setFormData({\n      name: '',\n      email: '',\n      password: '',\n    });\n    dispatch(validateName({ fieldValue: '' }));\n    dispatch(validateEmail({ fieldValue: '' }));\n    dispatch(validatePassword({ fieldValue: '' }));\n  };\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n    setFormData({\n      ...formData,\n      [name]: value,\n    });\n\n    switch (name) {\n      case 'name':\n        dispatch(validateName({ fieldValue: value }));\n        break;\n      case 'email':\n        dispatch(validateEmail({ fieldValue: value.toLowerCase() }));\n        break;\n      case 'password':\n        dispatch(validatePassword({ fieldValue: value }));\n        break;\n      default:\n        break;\n    }\n    setFocusedField(name);\n    toggleValidationPopup(name, true);\n  };\n\n  const calculatorInfo = {\n    height: calculator.height,\n    age: calculator.age,\n    bloodType: calculator.bloodType,\n    currentWeight: calculator.currentWeight,\n    desiredWeight: calculator.desiredWeight,\n    heightFeet: calculator.heightFeet,\n    heightInch: calculator.heightInch,\n    currentWeightLbs: calculator.currentWeightLbs,\n    desiredWeightLbs: calculator.desiredWeightLbs,\n    dailyRate: calculator.calculatorDailyRate,\n    unitOfMeasure: calculator.unitOfMeasure,\n    date: calculator.date,\n    startDate: calculator.startDate,\n    originalWeight: calculator.originalWeight,\n  };\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const { name, email, password } = formData;\n      const senddate = { name, email: email.toLowerCase(), password };\n      const registerResultAction = await dispatch(register(senddate));\n      if (register.fulfilled.match(registerResultAction)) {\n        const postCalculatorResultAction = await dispatch(\n          postCalculator(calculatorInfo)\n        );\n        if (postCalculator.rejected.match(postCalculatorResultAction)) {\n          navigate('/calculator');\n        } else {\n          navigate('/diary');\n        }\n        resetForm();\n      }\n    } catch (error) {\n      throw new Error('Error registering user: ' + error.message);\n    }\n  };\n\n  return (\n    <Box sx={{ width: '100%' }} className={style.form_container}>\n      <h2 className={style.form_title}>REGISTER</h2>\n      <Grid className={style.form_grid}>\n        <FormControl variant=\"standard\">\n          <form onSubmit={handleSubmit} noValidate className={style.form}>\n            <TextField\n              className={style.name_input}\n              autoComplete=\"name\"\n              InputLabelProps={\n                focusedField === 'name' && !isNameValid\n                  ? { style: { color: 'red' } }\n                  : { style: { color: '#9B9FAA' } }\n              }\n              inputProps={{\n                onKeyPress: event => {\n                  const { key } = event;\n                  if (key === 'Enter') {\n                    emailRef.current.focus();\n                  }\n                },\n              }}\n              variant=\"standard\"\n              label={'Name *'}\n              type=\"text\"\n              name=\"name\"\n              fullWidth\n              margin=\"normal\"\n              value={formData.name}\n              onChange={handleChange}\n              onFocus={() => setFocusedField('name')}\n              onBlur={() => setFocusedField(null)}\n              error={focusedField === 'name' && !isNameValid}\n              //  helperText={focusedField === 'name' && formData.name.length >= 3 ? <span>  {renderValidationPopup()}</span> : null}\n              //error={!formData.name && nameValidationReqs.some((req) => !req.met)}\n            />\n            {focusedField === 'name' && (\n              <ValidationPopup\n                validationData={validationReqs[focusedField]}\n                visible={focusedField}\n              />\n            )}\n            <TextField\n              className={style.email_input}\n              autoComplete=\"email\"\n              InputLabelProps={\n                focusedField === 'email' && !isEmailValid\n                  ? { style: { color: 'red' } }\n                  : { style: { color: '#9B9FAA' } }\n              }\n              inputRef={emailRef}\n              inputProps={{\n                onKeyPress: event => {\n                  const { key } = event;\n                  if (key === 'Enter') {\n                    passwordRef.current.focus();\n                  }\n                },\n              }}\n              variant=\"standard\"\n              label={'Email *'}\n              type=\"email\"\n              name=\"email\"\n              fullWidth\n              margin=\"normal\"\n              value={formData.email}\n              onChange={handleChange}\n              onFocus={() => setFocusedField('email')}\n              onBlur={() => setFocusedField(null)}\n              error={focusedField === 'email' && !isEmailValid}\n              //  helperText={focusedField === 'email' && formData.email.length >= 3 ? <span>  {renderValidationPopup()}</span> : null}\n              //error={!formData.email && emailValidationReqs.some((req) => !req.met)}\n            />\n            {focusedField === 'email' && (\n              <ValidationPopup\n                validationData={validationReqs[focusedField]}\n                visible={focusedField}\n              />\n            )}\n            <TextField\n              className={style.password_input}\n              autoComplete=\"current-password\"\n              InputLabelProps={\n                focusedField === 'password' && !isPasswordValid\n                  ? { style: { color: 'red' } }\n                  : { style: { color: '#9B9FAA' } }\n              }\n              inputRef={passwordRef}\n              variant=\"standard\"\n              label={'Password *'}\n              type=\"password\"\n              name=\"password\"\n              fullWidth\n              margin=\"normal\"\n              value={formData.password}\n              onChange={handleChange}\n              onFocus={() => setFocusedField('password')}\n              onBlur={() => setFocusedField(null)}\n              error={focusedField === 'password' && !isPasswordValid}\n              //  helperText={focusedField === 'password' && formData.password.length >= 3 ? <span>{(renderValidationPopup())}</span> : null}\n              //  error={!formData.password}\n            />\n            {focusedField === 'password' && (\n              <ValidationPopup\n                validationData={validationReqs[focusedField]}\n                visible={focusedField}\n              />\n            )}\n            <Box className={style.button_container}>\n              <CustomButton\n                type=\"submit\"\n                color=\"orange\"\n                disabled={!isFormValid}\n              >\n                Register\n              </CustomButton>\n            </Box>\n          </form>\n        </FormControl>\n      </Grid>\n    </Box>\n  );\n};\n\nexport default RegistrationForm;\n","import React from 'react';\nimport RegistrationForm from 'components/RegistrationForm/RegistrationForm';\nimport Container from 'components/Container/Container';\n\nfunction Register() {\n  return (\n    <div className=\" background mainBackground\">\n      <section className=\"top-bottom\">\n        <Container className=\"left-right\">\n          <RegistrationForm />\n        </Container>\n      </section>\n      <div className='footer-margin'></div>\n\n    </div>\n  )\n}\n\nexport default Register","import { createSelector } from 'reselect';\n\n// Select the registration slice from the Redux store\nconst selectRegistration = (state) => state.registration;\n\n// Select individual validation requirements\nexport const selectNameValidationReqs = createSelector(\n  [selectRegistration],\n  (registration) => registration.validationReqs.name\n);\n\nexport const selectEmailValidationReqs = createSelector(\n  [selectRegistration],\n  (registration) => registration.validationReqs.email\n);\n\nexport const selectPasswordValidationReqs = createSelector(\n  [selectRegistration],\n  (registration) => registration.validationReqs.password\n);\n\n// Select individual field validation states - this works then?\nexport const selectIsNameValid = createSelector(\n  [selectRegistration],\n  (registration) => registration.isNameValid \n);\n\nexport const selectIsEmailValid = createSelector(\n  [selectRegistration],\n  (registration) => registration.isEmailValid \n);\n\nexport const selectIsPasswordValid = createSelector(\n  [selectRegistration],\n  (registration) => registration.isPasswordValid \n);\n\n// Select the overall form validity\nexport const selectFormIsValid = createSelector(\n  [selectIsNameValid, selectIsEmailValid, selectIsPasswordValid],\n  (isNameValid, isEmailValid, isPasswordValid) =>\n    isNameValid && isEmailValid && isPasswordValid\n);","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M16.59 7.58 10 14.17l-3.59-3.58L5 12l5 5 8-8zM12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z\"\n}), 'CheckCircleOutline');\nexports.default = _default;","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M11 15h2v2h-2zm0-8h2v6h-2zm.99-5C6.47 2 2 6.48 2 12s4.47 10 9.99 10C17.52 22 22 17.52 22 12S17.52 2 11.99 2zM12 20c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z\"\n}), 'ErrorOutline');\nexports.default = _default;"],"names":["Container","children","className","propTopes","node","string","validationData","visible","Paper","elevation","css","List","sx","width","maxWidth","map","item","index","Object","keys","id","message","met","IconComponent","CheckCircleOutlineIcon","ErrorOutlineIcon","iconColor","ListItem","disableGutters","style","color","ListItemText","disableTypography","primary","fontSize","emailRef","useRef","passwordRef","isEmailValid","useSelector","selectIsEmailValid","isPasswordValid","selectIsPasswordValid","isNameValid","selectIsNameValid","isFormValid","selectFormIsValid","calculator","useUser","validationReqs","state","registration","navigate","useNavigate","dispatch","useDispatch","useState","name","email","password","validationPopups","setValidationPopups","focusedField","setFocusedField","formData","setFormData","handleChange","e","fieldName","target","value","validateName","fieldValue","validateEmail","toLowerCase","validatePassword","calculatorInfo","height","age","bloodType","currentWeight","desiredWeight","heightFeet","heightInch","currentWeightLbs","desiredWeightLbs","dailyRate","calculatorDailyRate","unitOfMeasure","date","startDate","originalWeight","handleSubmit","preventDefault","senddate","register","registerResultAction","postCalculator","postCalculatorResultAction","Error","Box","Grid","FormControl","variant","onSubmit","noValidate","TextField","autoComplete","InputLabelProps","inputProps","onKeyPress","event","key","current","focus","label","type","fullWidth","margin","onChange","onFocus","onBlur","error","ValidationPopup","inputRef","CustomButton","disabled","selectRegistration","createSelector","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d"],"sourceRoot":""}