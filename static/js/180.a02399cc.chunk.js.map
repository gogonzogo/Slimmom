{"version":3,"file":"static/js/180.a02399cc.chunk.js","mappings":"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","sources":["components/Modal/GraphModal.jsx","components/RightSideBar/RightSideBar.jsx","components/RightSideBar/Stats.jsx","components/RightSideBar/StatsContainer.jsx","pages/Calculator/Calculator.jsx","webpack://slimmom/./src/components/RightSideBar/rightSideBar.module.css?edd3"],"sourcesContent":["\nimport React from 'react';\nimport { forwardRef, } from 'react';\n\nimport Button from '@mui/material/Button';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport Slide from '@mui/material/Slide';\nimport { BarChart } from '@mui/x-charts/BarChart';\nimport { LineChart } from '@mui/x-charts/LineChart';\nimport { useState } from 'react';\n\n\nconst Transition = forwardRef(function Transition(props, ref) {\n    return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\n\n\nconst GraphModal = props => {\n\n    const { handleModalClose, modalState } = props;\n\n    const graphCalcDates = modalState.data.payload.graphCalcDates\n    const grapCalcData = modalState.data.payload.graphCalcData\n    const grapDairyhData = modalState.data.payload.grapDairyhData\n    const graphDiaryDates = modalState.data.payload.graphDiaryDates\n    const [showDiary] = useState(grapDairyhData.length > 0)\n    const [showCalc] = useState(grapCalcData.length > 0)\n\n\n\n\n    return (\n\n        <>\n\n            <Dialog\n\n                PaperProps={{\n                    sx: {\n                        minWidth: \"80%\",\n                        maxWidth: \"80%\",\n                        maxHeight: \"80%\",\n                        minHeight: \"80%\"\n                    }\n                }}\n                open={modalState.open}\n                TransitionComponent={Transition}\n                keepMounted\n                onClose={handleModalClose}\n                aria-describedby=\"alert-dialog-slide-description\"\n            >\n\n                <DialogContent>\n\n                    <DialogContentText id=\"alert-dialog-slide-description\">\n                        <div style={{ height: \"100%\", width: '100%' }}>\n\n                            {showDiary && <BarChart\n                                xAxis={[\n                                    {\n                                        id: 'barCategories',\n                                        data: graphDiaryDates, label: 'Calories eaten',\n                                        scaleType: 'band',\n                                    },\n                                ]}\n                                series={[\n                                    {\n                                        data: grapDairyhData\n                                    },\n                                ]}\n                                width={500}\n                                height={300}\n                            />\n                            }\n                            {showCalc && <LineChart\n\n                                series={[\n                                    {\n                                        data: grapCalcData, label: 'Change in weight', color: 'orange'\n                                    },\n\n\n                                ]}\n                                xAxis={[{ scaleType: 'point', data: graphCalcDates }]}\n                                width={500}\n                                height={300}\n                            />\n                            }\n                        </div>\n\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={handleModalClose}>close</Button>\n                </DialogActions>\n            </Dialog>\n        </>\n    )\n}\n\nexport default GraphModal;\n","import { useUser } from 'hooks/useUser';\nimport s from './rightSideBar.module.css';\nimport React from 'react';\n\nconst RightSideBar = props => {\n  const { calculator } = useUser();\n  return (\n    <div className={s.sideBarContainer}>\n      {React.cloneElement(props.children, { calculator: calculator })}\n    </div>\n  );\n};\n\nexport default RightSideBar;\n","import s from './rightSideBar.module.css';\nimport CustomButton from 'components/CustomButton/CustomButton';\nimport { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { getGraphData } from '../../redux/user/userOperations';\nimport GraphModal from 'components/Modal/GraphModal';\n\n\nexport const Stats = ({ calculator, progressData }) => {\n  const dispatch = useDispatch();\n  const [modalState, setModalState] = useState({\n    open: false,\n    data: null,\n  });\n\n  const showGraph = async () => {\n    const grpthDates = {\n      todayDate: new Date(),\n    }\n    const result = await dispatch(getGraphData(grpthDates));\n    setModalState(prev => {\n      return {\n        ...prev,\n        open: true,\n        data: result\n      };\n    });\n  };\n\n  const handleModalClose = () => {\n    setModalState(prev => {\n      return {\n        ...prev,\n        open: false,\n      };\n    });\n    setTimeout(() => {\n      // fixing effect, when during closing modal you see 0 kcal recommended daily calorie intake\n      setModalState({ open: false, dailyRate: null, foodNotToEat: [] });\n    }, 250);\n  };\n  return (\n    <div>\n\n      {calculator.startDate ? (\n        <div className={s.sideBarContentWrapper}>\n          <div className={s.sideBarContent}>\n            <CustomButton\n              color=\"orange\"\n              size=\"graph\"\n              onClick={showGraph}\n            >\n              graphs\n            </CustomButton>\n            <p className={s.sideBarTitle}>Your stats</p>\n            <ul className={s.statsBox}>\n              <li className={s.statsBoxItem}>\n                <p>Height</p>\n                <p>\n                  {calculator.height\n                    ? `${calculator.height} cm`\n                    : calculator.heightFeet\n                      ? `${calculator.heightFeet} ft ${calculator.heightInch} in`\n                      : 'Height data not available'}\n                </p>\n              </li>\n              <li className={s.statsBoxItem}>\n                <p>Age</p>\n                <p>{calculator.age} years young</p>\n              </li>\n              <li className={s.statsBoxItem}>\n                <p>Current Weight</p>\n                <p>\n                  {calculator.currentWeight\n                    ? `${calculator.currentWeight} kg`\n                    : calculator.currentWeightLbs\n                      ? `${calculator.currentWeightLbs} lbs`\n                      : 'Current weight data not available'}\n                </p>\n              </li>\n              <li className={s.statsBoxItem}>\n                <p>Desired Weight</p>\n                <p>\n                  {calculator.desiredWeight\n                    ? `${calculator.desiredWeight} kg`\n                    : calculator.desiredWeightLbs\n                      ? `${calculator.desiredWeightLbs} lbs`\n                      : 'Desired weight data not available'}\n                </p>\n              </li>\n              <li className={s.statsBoxItem}>\n                <p>Blood Type</p>\n                <p>{calculator.bloodType}</p>\n              </li>\n            </ul>\n          </div>\n          <div className={s.sideBarContent}>\n            <p className={s.sideBarTitle}>Your progress</p>\n            <ul className={s.statsBox}>\n              <li className={s.statsBoxItem}>\n                <p>Started Date</p>\n                <p>{progressData.originalDate}</p>\n              </li>\n              <li className={s.statsBoxItem}>\n                <p>Starting Weight</p>\n                <p>\n                  {calculator.unitOfMeasure === 'M'\n                    ? `${calculator.originalWeight} kg`\n                    : calculator.unitOfMeasure === 'S'\n                      ? `${calculator.originalWeight} lbs`\n                      : 'Starting weight data not available'}\n                </p>\n              </li>\n              <li className={s.statsBoxItem}>\n                <p>Weight Lost</p>\n                {calculator.unitOfMeasure === 'M'\n                  ? `${progressData.lost.toFixed(2)} kg`\n                  : calculator.unitOfMeasure === 'S'\n                    ? `${progressData.lost.toFixed(2)} lbs`\n                    : 'Lost weight data not available'}\n              </li>\n              <li className={s.statsBoxItem}>\n                <p>Days Tracking</p>\n                <p>{progressData.inDays} days</p>\n              </li>\n            </ul>\n            {progressData.reachedGoal && (\n              <p className={s.sideBarTitle}>You reached your goal!</p>\n            )}\n          </div>\n        </div>\n      ) : (\n        <div className={s.sideBarContentWrapper}>\n          <div className={s.sideBarContent}>\n            <p className={s.sideBarTitle}>\n              Please complete the stats to begin tracking your journey\n            </p>\n          </div>\n        </div>\n      )}\n      {modalState.data &&\n        <GraphModal handleModalClose={handleModalClose} modalState={modalState} />\n      }\n    </div>\n  );\n};\n","import React from 'react';\nimport dayjs from 'dayjs';\nimport { Stats } from './Stats';\n\nexport const StatsContainer = ({ calculator }) => {\n  const startDate = dayjs(calculator.startDate, 'MM-DD-YYYY');\n  const goalWeight = calculator.currentWeight ||\n    calculator.currentWeightLbs;\n\n  const lost = () => {\n    if (calculator.unitOfMeasure === 'M') {\n      if (\n        calculator.originalWeight !== null &&\n        calculator.currentWeight !== null\n      ) {\n        return Math.abs(calculator.originalWeight - calculator.currentWeight);\n      }\n    } else if (calculator.unitOfMeasure === 'S') {\n      if (\n        calculator.originalWeight !== null &&\n        calculator.currentWeightLbs !== null\n      ) {\n        return Math.abs(\n          calculator.originalWeight - calculator.currentWeightLbs\n        );\n      }\n    }\n    return 0;\n  };\n  const progressData = {\n    originalDate: dayjs(calculator.startDate)\n      .format('MM-DD-YYYY')\n      .replaceAll('-', '/'),\n    originalWeight: calculator.originalWeight,\n    lost: lost(),\n    inDays: dayjs().diff(startDate, 'day'),\n    reachedGoal: calculator.desired <= goalWeight,\n  };\n\n  return <Stats calculator={calculator} progressData={progressData} />;\n};\n","// external\nimport React from 'react';\nimport { useEffect, useState, useRef } from 'react';\nimport { useSelector } from 'react-redux';\nimport Container from 'components/Container/Container';\nimport { Paper } from '@mui/material';\n\n// internal\nimport RightSideBar from 'components/RightSideBar/RightSideBar';\nimport CaloriesCalc from 'components/CaloriesCalc/CaloriesCalc';\nimport { StatsContainer } from 'components/RightSideBar/StatsContainer';\nimport s from '../../components/RightSideBar/rightSideBar.module.css'\nimport { selectThemeMode } from 'redux/theme/themeSelectors';\n\nfunction Calculator() {\n  const themeMode = useSelector(selectThemeMode);\n  const refContainer = useRef();\n  const [dimensions, setDimensions] = useState({\n    width: 0,\n    height: 0,\n  });\n\n  useEffect(() => {\n    if (!refContainer.current) return;\n    const resizeObserver = new ResizeObserver(() => {\n      setDimensions({\n        width: refContainer.current.offsetWidth,\n        height: refContainer.current.offsetHeight,\n      });\n    });\n    resizeObserver.observe(refContainer.current);\n    return () => resizeObserver.disconnect(); // clean up \n  }, []);\n  return (\n    <div\n      className=\"background Calc-DairyBackground\"\n      style={{ display: 'flex', flexDirection: 'column' }}\n      ref={refContainer}\n    >\n      <section className=\"top-bottom\">\n        <Container className=\"left-right\">\n          <CaloriesCalc />\n          {/* <NotAllowedProducts />*/}\n        </Container>\n      </section>\n      <section className=\"no-bottom\">\n        <Container className=\"no-left-right\">\n          <Paper className={`${s.sidebarBox} ${themeMode === 'dark' ? s.darkMode : s.lightMode}`}\n\n            style={{ height: dimensions.width > 1279 ? `${dimensions.height + 184}px` : '275px' }} />\n          <RightSideBar>\n            <StatsContainer />\n          </RightSideBar>\n        </Container>\n      </section>\n    </div>\n  );\n}\n\nexport default Calculator;\n","// extracted by mini-css-extract-plugin\nexport default {\"sideBarContainer\":\"rightSideBar_sideBarContainer__rWrUX\",\"sidebarBox\":\"rightSideBar_sidebarBox__q9pRQ\",\"sideBarContentWrapper\":\"rightSideBar_sideBarContentWrapper__EDhJV\",\"sideBarContent\":\"rightSideBar_sideBarContent__TIFBc\",\"sideBarTitle\":\"rightSideBar_sideBarTitle__1pky6\",\"statsBox\":\"rightSideBar_statsBox__0Xanq\",\"statsBoxItem\":\"rightSideBar_statsBoxItem__Vk8lb\"};"],"names":["Transition","forwardRef","props","ref","direction","handleModalClose","modalState","graphCalcDates","data","payload","grapCalcData","graphCalcData","grapDairyhData","graphDiaryDates","useState","length","showDiary","showCalc","PaperProps","sx","minWidth","maxWidth","maxHeight","minHeight","open","TransitionComponent","keepMounted","onClose","id","style","height","width","xAxis","label","scaleType","series","color","onClick","calculator","useUser","className","s","React","children","Stats","progressData","dispatch","useDispatch","setModalState","showGraph","grpthDates","todayDate","Date","getGraphData","result","prev","startDate","CustomButton","size","heightFeet","heightInch","age","currentWeight","currentWeightLbs","desiredWeight","desiredWeightLbs","bloodType","originalDate","unitOfMeasure","originalWeight","lost","toFixed","inDays","reachedGoal","GraphModal","setTimeout","dailyRate","foodNotToEat","StatsContainer","dayjs","goalWeight","format","replaceAll","Math","abs","diff","desired","themeMode","useSelector","selectThemeMode","refContainer","useRef","dimensions","setDimensions","useEffect","current","resizeObserver","ResizeObserver","offsetWidth","offsetHeight","observe","disconnect","display","flexDirection","Container","CaloriesCalc","Paper","RightSideBar"],"sourceRoot":""}